library(reticulate)
install.packages(c("cachem", "evaluate", "httpuv", "httr", "httr2", "later", "profvis", "rlang", "sass", "testthat", "tzdb", "viridisLite", "vroom", "waldo", "xml2"))
library(reticulate)
library(reticulate)
use_python("/Users/Patricio/anaconda3/bin/python3")
use_python("C:\Users\Patricio\anaconda3/python3")
use_python("/Users/Patricio/anaconda3/python3")
use_python("\Users\Patricio\anaconda3")
use_python("\Users\Patricio\anaconda3\python3")
use_python("\users\Patricio\anaconda3\python3")
knitr::opts_chunk$set(echo = TRUE)
c(1,2,3)
scan()
vec<- c(16,0,1,20,1,7,88,5,1,9)
fix(vec)
vec
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
par(mfrow = c(1,2))
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
par(mfrow = c(1,1))
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023")
plot(alumnos,notas, pch=16, col= "mediumvioletred", xlab= "Alumnos", ylab= "Notas",
main = "Notas alumnos 2023", type = "b")
par(mfrow = c(1,2))
plot = plot(exp(1:20), xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lineal")
plotlog = plot( exp(1:20), log = "y" , xlab = "Indice", ylab = expression(e^{1:20}),
main = "Escala lodaritmica en el eje y")
par(mfrow = c(3,2))
plot(x,y pch =  23, cex = 2, col = "blue", type = "p")
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
plot(x,y pch =  23, cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
par(mfrow = c(3,2))
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
title("Tipos de Graficas y sus tipos de lineas")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
par(mfrow = c(3,2))
x = c(50:59)
y = c(2, 9, 25, 3, 100, 77, 62, 54, 19, 40)
title("Tipos de Graficas y sus tipos de lineas")
plot(x,y, pch = 23,  cex = 2, col = "blue", type = "p")
plot(x,y, pch = 23, cex = 2, col = "blueviolet", type = "l")
plot(x,y, pch = 23, cex = 2, col = "gold", type = "b")
plot(x,y, pch = 23, cex = 2, col = "deeppink", type = "o")
plot(x,y, pch = 23, cex = 2, col = "springgreen", type = "h")
plot(x,y, pch = 23, cex = 2, col = "firebrick1", type = "s")
par(mfrow = c(1,1))
setwd("C:/Users/Patricio/Mi unidad/Programacion/Portafolio/R/Pokemon Unite/images")
knitr::opts_chunk$set(echo = TRUE)
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Puntos_Marcados = mean(`Puntos Marcados`),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Puntos_Marcados , y = Average_Valoracion )) +
labs(title="Puntos Marcados y Valoración", x = "Puntos Marcados", y = "Valoración") +
geom_line(color="purple", position = position_dodge(width = 1)) +
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
dataset <- read_excel("dataset.xlsx")
head(dataset)
summary(dataset)
str(dataset)
dataset$Fecha <- format(as.Date(dataset$Fecha), "%A")
head(dataset)
summary(dataset$`Puntos Marcados`)
summary(dataset$Kills)
summary(dataset$Asistencias)
summary(dataset$Nivel)
summary(dataset$Valoracion)
dataset$Fecha <- ordered(dataset$Fecha,
levels=c("domingo", "martes", "miércoles", "jueves", "viernes", "sábado"))
head(dataset$Fecha)
AVG_por_dia<- dataset %>%
group_by(Fecha) %>%
summarise(`Puntos Marcados` = mean(`Puntos Marcados`),
Kills = mean(Kills),
Asistencias = mean(Asistencias),
Nivel = mean(Nivel),
Valoracion = mean(Valoracion)) %>%
arrange(Fecha)
head(AVG_por_dia)
AVG_por_momento<- dataset %>%
group_by(`Momento del dia`) %>%
summarise(`Puntos Marcados` = mean(`Puntos Marcados`),
Kills = mean(Kills),
Asistencias = mean(Asistencias),
Nivel = mean(Nivel),
Valoracion = mean(Valoracion)) %>%
arrange(`Momento del dia`)
head(AVG_por_momento)
AVG_semana<- dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(`Puntos Marcados` = mean(`Puntos Marcados`),
Kills = mean(Kills),
Asistencias = mean(Asistencias),
Nivel = mean(Nivel),
Valoracion = mean(Valoracion)) %>%
arrange(`Dia de la Semana`)
head(AVG_semana)
AVG_rol<- dataset %>%
group_by(Rol) %>%
summarise(`Puntos Marcados` = mean(`Puntos Marcados`),
Kills = mean(Kills),
Asistencias = mean(Asistencias),
Nivel = mean(Nivel),
Valoracion = mean(Valoracion)) %>%
arrange(Rol)
head(AVG_rol)
# obtencion de promedios por Pokemon
AVG_pokemon<- dataset %>%
group_by(Pokemon) %>%
summarise(`Puntos Marcados` = mean(`Puntos Marcados`),
Kills = mean(Kills),
Asistencias = mean(Asistencias),
Nivel = mean(Nivel),
Valoracion = mean(Valoracion)) %>%
arrange(Pokemon)
head(AVG_pokemon)
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Puntos_Marcados = mean(`Puntos Marcados`),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Puntos_Marcados , y = Average_Valoracion )) +
labs(title="Puntos Marcados y Valoración", x = "Puntos Marcados", y = "Valoración") +
geom_line(color="purple", position = position_dodge(width = 1)) +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Puntos_Marcados = mean(`Puntos Marcados`),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Puntos_Marcados , y = Average_Valoracion )) +
labs(title="Puntos Marcados y Valoración", x = "Puntos Marcados", y = "Valoración") +
geom_line(color="purple", position = position_dodge(width = 1)) +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_kills = mean(Kills),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_kills , y = Average_Valoracion )) +
labs(title=" Kills y Valoración", x = "Kills", y = "Valoración") +
geom_line(color="red") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Asistencias = mean(Asistencias),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Asistencias , y = Average_Valoracion )) +
labs(title="Asistencias y Valoración", x = "Asistencias" , y = "Valoración") +
geom_line(color="orange") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Puntos_Marcados = mean(`Puntos Marcados`),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Puntos_Marcados , y = Average_Valoracion )) +
labs(title="Puntos Marcados y Valoración", x = "Puntos Marcados", y = "Valoración") +
geom_line(color="purple") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_kills = mean(Kills),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_kills , y = Average_Valoracion )) +
labs(title=" Kills y Valoración", x = "Kills", y = "Valoración") +
geom_line(color="red") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Asistencias = mean(Asistencias),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Asistencias , y = Average_Valoracion )) +
labs(title="Asistencias y Valoración", x = "Asistencias" , y = "Valoración") +
geom_line(color="purple") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Asistencias = mean(Asistencias),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Asistencias , y = Average_Valoracion )) +
labs(title="Asistencias y Valoración", x = "Asistencias" , y = "Valoración") +
geom_line(color="orange") +
theme_classic()
dataset %>%
group_by(Pokemon) %>%
summarise(Average_Puntos_Marcados = mean(`Puntos Marcados`),
Average_Valoracion = mean(Valoracion)) %>%
arrange(Pokemon) %>%
ggplot(aes(x = Average_Puntos_Marcados , y = Average_Valoracion )) +
labs(title="Puntos Marcados y Valoración", x = "Puntos Marcados", y = "Valoración") +
geom_line(color="purple") +
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col()+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col()+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col()+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1))+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col(position = position_dodge(width = 1)) +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col(position = position_dodge(width = 1)) +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1))+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col(position = position_dodge(width = 1)) +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col(position = position_dodge(width = 1)) +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col()+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1)))+
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1))+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1))+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(Fecha) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(Fecha) %>%
ggplot(aes(x = Fecha , y = Valoración, fill = Valoración)) +
labs(title="Rendimiento por día de la semana", x = NULL , y = "Valoración") +
geom_col(position = position_dodge(width = 1))+
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
dataset %>%
group_by(`Momento del dia`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Momento del dia`) %>%
ggplot(aes(x = `Momento del dia` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento del dia", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange") +
theme_classic()
dataset %>%
group_by(`Dia de la Semana`) %>%
summarise(Valoración = mean(Valoracion)) %>%
arrange(`Dia de la Semana`) %>%
ggplot(aes(x = `Dia de la Semana` , y = Valoración, fill = Valoración)) +
labs(title="Valoracion por Momento de la semana", x = NULL, y = "Valoración") +
geom_col() +
scale_fill_gradient(low="purple", high="orange")+
theme_classic()
